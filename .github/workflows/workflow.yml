name: Build and Test
on: [push, pull_request, workflow_dispatch]

jobs:
  test:
    name: Dub Tests
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        dc: [dmd-latest, ldc-latest]
        exclude:
          - { os: macOS-latest, dc: dmd-latest }

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dc }}

      - name: 'macOS: Install dependencies'
        if: runner.os == 'macOS'
        run: |
          brew install coreutils pkg-config sqlite
          echo "LIBRARY_PATH=${LD_LIBRARY_PATH-}:/usr/local/lib/" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/local/opt/sqlite/lib/pkgconfig" >> $GITHUB_ENV
      - name: 'Windows: Get and setup dependencies'
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          Invoke-WebRequest -Uri https://raw.githubusercontent.com/dlang-community/d2sqlite3/master/lib/win64/sqlite3.lib -OutFile ${{ github.workspace }}\sqlite3.lib

      - name: 'linux: Run full test suite'
        if: runner.os == 'linux'
        run: |
          make test
          make coverage

      - name: Run unittests
        if: runner.os != 'linux'
        run: |
          # Test in release mode
          dub test --build=release
          # Coverage
          dub test --build=cov
          dub test --build=unittest-cov

      - name: Upload coverage
        uses: codecov/codecov-action@v1.0.5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          fail_ci_if_error: true
      - name: 'Build application'
        if: startsWith(matrix.dc, 'ldc')
        run: dub build --build=release
      - name: 'POSIX: Move artifacts'
        if: startsWith(matrix.dc, 'ldc') && runner.os != 'Windows'
        run: |
          mkdir -p dist/
          # Remove tests binary
          rm bin/*-test-application
          mv bin/* dist/
          mv gboard_autopsy.py dist/
      - name: 'Windows: Move artifacts and fetch sqlite3.dll'
        if: startsWith(matrix.dc, 'ldc') && runner.os == 'Windows'
        shell: powershell
        run: |
          mkdir -p dist/
          Invoke-WebRequest -Uri https://raw.githubusercontent.com/dlang-community/d2sqlite3/master/lib/win64/sqlite3.dll -OutFile ${{ github.workspace }}\dist\sqlite3.dll
          # Remove tests binary
          del bin/*-test-application.exe
          move bin/* dist/
          move gboard_autopsy.py dist/
      - uses: actions/upload-artifact@v2
        if: startsWith(matrix.dc, 'ldc')
        with:
          name: GBoard4A-${{ github.sha }}-${{ runner.os }}-release-x86_64
          path: dist/
